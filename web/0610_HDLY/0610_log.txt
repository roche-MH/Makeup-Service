- 이미지 저장할 때, 이미지 파일에 user ID 붙여서 저장해야 구분할 수 있지 않을까?
  다중 사용자가 동시에 접근하더라도 같은 사용자가 동시에 들어오는 경우는 없을테니까
- 이미지 처리해서 결과 저장하는 폴더 삭제하는 주기 정해서 폴더 empty reset


1) imginput.html 관련
- input 버튼 클릭 가능한 upload 영역 수정하기
	* 완료
	* input.css 보고 달라진 부분 코드 덮붙여쓰기
- wrap 비율 수정하기
	* 완료
	* 마찬가지로, input.css "wrap" 부분 참고


2) imgprocess.html 관련
- thumnail로 보이게(동그랗게) css 입히기
	* 완료
	* imgporcess.css를 beautyapp_merged>accounts>static>css에 넣어서 작업함(이 path에 없으면 넣어야 함)
- before&after 보이도록 버튼 활성화
	* 완료
	* imgprocess.html 코드에 script 추가 + chgBtn onclick 설정
	* toggle 버튼으로 수정함(script, css, label... 3곳 수정해야 함)
- 밑에 4개 버튼 활성화? save&upload는 적어도 할 수 있고, share&youtube는 고민해보기
	* save : 버튼은 윤수님께서 바닐라JS 코드로 작성함, 나중에 저장하는 경로 수정해야 함(AWS 경로에)
	* upload : 버튼 누르면 post_new 페이지로 이동함


3) post_new.html 관련
- img + text 영역 배치 정리하기 : 수정한 코드 2개
	* beautyapp_merged > post > templates > post > post_new.html : 
	* beautyapp_merged > post > forms.py : 


+


(0612 worked log)

1) post_new.html
	- submit Btn : imginput.html 페이지에 있는 submit 버튼 css 입힘
	- form 태그 action 어디로 보내야 함???

2) forms.py
	- 글쓰기 ~ 테마 ~ 화장품 ... 형식을 바꾸고 싶음

----

<< 추가 기능 관련 작업 >>
1) personalColor
	- 파일 생성 : beautyapp_merged > post > templates > post > faceRatio_output.html

2) personalColor
	- 파일 생성 : beautyapp_merged > post > templates > post > personalColor_output.html

3) views.py 코드 추가
	# addtional functions urls
	    path('faceratio/', face_ratio, name='face_ratio'),
	    path('personalcolor/', personal_color, name='personal_color'),

4) urls.py 코드 추가
	@login_required
	def face_ratio(request): # face ratio function
	    return render(request, 'post/faceRatio_output.html')

	@login_required
	def personal_color(request): # personal color detection function
	    return render(request, 'post/personalColor_output.html')


